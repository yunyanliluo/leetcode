汉明距离
The Hamming distance between two integers is the number of positions at which the corresponding bits are different.

Given two integers x and y, calculate the Hamming distance.

Note:
0 ≤ x, y < 231.

Example:

Input: x = 1, y = 4

Output: 2

Explanation:
1   (0 0 0 1)
4   (0 1 0 0)
       ↑   ↑

The above arrows point to positions where the corresponding bits are different.

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/hamming-distance
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

#my answer
class Solution {
public:
    int hammingDistance(int x, int y) {
        int c = x^y;
        int count=c&1;
        while(c>>=1)
        {
            if(c&1) ++count;
        }
        return count;
    }
};
执行用时 :4 ms, 在所有 C++ 提交中击败了73.88%的用户
内存消耗 :8.2 MB, 在所有 C++ 提交中击败了78.61%的用户

#另一种写法
class Solution {
public:
    int hammingDistance(int x, int y) {
        int count=0;
        while(x||y)
        {
            if((x&1)!=(y&1)) ++count;
            x>>=1;y>>=1;
        }
        return count;
    }
};
执行用时 :8 ms, 在所有 C++ 提交中击败了22.11%的用户
内存消耗 :8.2 MB, 在所有 C++ 提交中击败了81.64%的用户
