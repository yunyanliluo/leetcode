Combination Sum III
组合总和III
找出所有相加之和为 n 的 k 个数的组合。组合中只允许含有 1 - 9 的正整数，并且每种组合中不存在重复的数字。
说明：
所有数字都是正整数。
解集不能包含重复的组合。 

示例 1:
输入: k = 3, n = 7
输出: [[1,2,4]]

示例 2:
输入: k = 3, n = 9
输出: [[1,2,6], [1,3,5], [2,3,4]]

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/combination-sum-iii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

#my answeer
#回溯法
class Solution {
public:
    vector<vector<int>> combinationSum3(int k, int n) {
        int Max=9;
        Max=min(Max, n);
        vector<vector<int>> res;
        vector<int> tempres;
        BackTrack (Max, n, k, res, tempres);
        return res;
    }
    void BackTrack (int Max, int neededn, int neededk, vector<vector<int>>& res, vector<int>& tempres)
    {
        if (neededk==0&&neededn==0)
        {
            res.push_back(tempres);
            return;
        }
        if (neededk>0&&neededn>0&&Max>=1)
        {
            int i=Max;
            while (i>neededn) --i;
            for (; i; --i)
            {
                tempres.push_back(i);
                BackTrack (i-1, neededn-i, neededk-1, res, tempres);
                tempres.pop_back();
            }
        }
        return;
    }
};
执行用时 :4 ms, 在所有 C++ 提交中击败了82.91%的用户
内存消耗 :8.6 MB, 在所有 C++ 提交中击败了48.16%的用户
