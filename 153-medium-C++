假设按照升序排序的数组在预先未知的某个点上进行了旋转。( 例如，数组 [0,1,2,4,5,6,7] 可能变为 [4,5,6,7,0,1,2] )。
找出其中最小的元素。假设数组中不存在重复元素。

#my answer

#二分查找
时间复杂度O（logn），空间复杂度O（1）。

class Solution {
public:
    int findMin(vector<int>& nums) {
        int left=0, right=nums.size()-1;
        while (left<right)
        {
            int mid=left+(right-left)/2;
            if (nums[left]<nums[right])
                return nums[left];
            else if (nums[mid]>=nums[left]) //这里nums[mid]==nums[left]等价于mid==left
                left=mid+1;
            else
                right=mid;
        }
        return nums[left];
    }
};

执行用时 :4 ms, 在所有 C++ 提交中击败了91.04%的用户
内存消耗 :8.7 MB, 在所有 C++ 提交中击败了49.75%的用户
