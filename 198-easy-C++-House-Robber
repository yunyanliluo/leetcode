House Robber
打家劫舍
You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night.
Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.

Example 1:
Input: [1,2,3,1]
Output: 4
Explanation: Rob house 1 (money = 1) and then rob house 3 (money = 3).
             Total amount you can rob = 1 + 3 = 4.

Example 2:
Input: [2,7,9,3,1]
Output: 12
Explanation: Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).
             Total amount you can rob = 2 + 9 + 1 = 12.

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/house-robber
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

#my answer
我本来以为，答案一定是所有奇数位置之和，或所有偶数位置之和，实际上答案并非如此。反例：9,7,2,10，应劫19.

#solutions
#dp
dp[i]前0~i个元素的最大rob值
状态转移方程dp[i]=max(dp[i-1],dp[i-2]+nums[i])
时间On,空间On
class Solution {
public:
    int rob(vector<int>& nums) {
        int n=nums.size();
        if(n==0) return 0;
        if(n==1) return nums[0];
        vector<int> dp(n);
        dp[0]=nums[0];
        dp[1]=max(nums[0],nums[1]);
        for(int i=2;i<n;++i)
        {
            dp[i]=max(dp[i-1],dp[i-2]+nums[i]);
        }
        return dp[n-1];
    }
};
执行用时 :0 ms, 在所有 C++ 提交中击败了100.00%的用户
内存消耗 :8.4 MB, 在所有 C++ 提交中击败了91.82%的用户

#improvement
将dp数组改为两个变量pre和prepre
class Solution {
public:
    int rob(vector<int>& nums) {
        int n=nums.size();
        if(n==0) return 0;
        if(n==1) return nums[0];
        int pre, prepre;
        prepre=nums[0];
        pre=max(nums[0],nums[1]);
        for(int i=2;i<n;++i)
        {
            int tmp=pre;
            pre=max(pre,prepre+nums[i]);
            prepre=tmp;
        }
        return pre;
    }
};
时间和空间皆变差了
执行用时 :4 ms, 在所有 C++ 提交中击败了75.78%的用户
内存消耗 :8.6 MB, 在所有 C++ 提交中击败了80.45%的用户
