Triangle
三角形最小路径和
给定一个三角形，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。希望空间复杂度O（n）。

#solutions
#dp - 一维数组
#时间复杂度O（mn），空间复杂度O（n）
其实我们dp时候每次只用到上一层数据,如果我们倒着,从底向上可以优化成O(n)空间的
class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int m=triangle.size(), n=m>0?triangle[m-1].size():0;
        if (n==0) return 0;
        int dp[n]={0};
        for (int i=0; i<n; ++i)
            dp[i]=triangle[m-1][i];
        for (int i=m-2; i>=0; --i)
        for (int j=0; j<triangle[i].size(); ++j)
        {
            dp[j]=min(dp[j],dp[j+1])+triangle[i][j];
        }
        return dp[0];
    }
};
执行用时 :8 ms, 在所有 C++ 提交中击败了81.22%的用户
内存消耗 :9.6 MB, 在所有 C++ 提交中击败了96.05%的用户

#dp - 在原数组上修改，不使用额外空间
#时间复杂度O（mn），空间复杂度O（1）
自顶向下或自底向上都可以
